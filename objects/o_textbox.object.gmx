<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>choosing = 0;
chooser = 0;
starting = 0;
savedpoint = 0;
choiceno = 0;
msgsprite = array_create(99);
msgspriteno = array_create(99);
choiceat[0] = "";
txturn = 0;
txtalpha = .1;
fading = false;
switch FANTASYTAKER.dialogueat {
    case 0:
        txt_test();
        break;
    case 1:
        
        break;
    case 2:
        
        break;
    case 3:
        
        break;
    case 4:
        
        break;
    case 5:
        
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
message_draw = message[message_current];
if choiceno &lt; array_length_1d(choiceat) &amp;&amp; message_current = choiceat[choiceno] {
    choicesetdraw[0] = choice[choiceno*2];
    choicesetdraw[1] = choice[choiceno*2+1];
    starting = 1;
}
if choosing != 2 { 
    if (keyboard_check_pressed(ord("S"))) { 
        if starting = 1 {
            starting = 0;
            choosing = 1;
            exit;
        }
        if (message_current &lt; message_end) &amp;&amp; (message_current != message_end2[choiceno]) {
            message_current += 1;
            message_length = string_length(message[message_current]);
            characters = 0;
            message_draw = "";
        } else { 
            instance_destroy();
            
            
        }
    }
}
if keyboard_check_pressed(vk_up) || keyboard_check_pressed(vk_down) {
    if chooser = 0 {
        chooser = 1;
    } else if chooser = 1 {
        chooser = 0;
    }
}
if choosing = 1 {
    if keyboard_check_pressed(ord('S')) {
        choosing = 0;
        savedpoint = 0;
        message_current = choiceoutcome[choiceno*2+chooser];
        message_length = string_length(message[message_current]);
        characters = 0;
        message_draw = "";
        txtalpha = .1;
        choiceno++;
    }
}
if keyboard_check_pressed(vk_control) {
    if choiceat[0] = "" || choiceno &gt; array_length_1d(choiceat) {
        instance_destroy();
    } else {
        message_current = choiceat[choiceno];
    }
}

if txtalpha &lt; 1 &amp;&amp; !fading {
    txtalpha += .05;
}
if fading {
    durability = 0;
    txtalpha -= .02;
    if txtalpha &lt;= 0 {
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if msgsprite[message_current] != 0 {
    draw_sprite(msgsprite[message_current], msgspriteno[message_current], x, y);
}
draw_set_halign(fa_center);
draw_set_colour(c_white);
if choosing = 0 {
    draw_text(x, y, message_draw);
} else {
    draw_text(x, y, choicesetdraw[0]);
    draw_text(x, y+50, choicesetdraw[1]);
    draw_sprite(s_chooser, 0, x, y+(50*(chooser)));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
